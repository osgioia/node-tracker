# Database Configuration
DATABASE_URL=postgresql://username:password@localhost:5432/tracker?schema=public

# JWT Configuration (CRITICAL: Use a strong, random secret in production)
# Generate with: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=your-super-secure-jwt-secret-at-least-32-characters-long-please-change-this-in-production
JWT_EXPIRES_IN=15m

# Server Configuration
PORT=3000
NODE_ENV=development

# Tracker Configuration
UDP=false
HTTP=true
WS=false
ANNOUNCE_INTERVAL=300
TRUST_PROXY=false
STATS=true

# Security Configuration
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001
MAX_REQUEST_SIZE=10mb
BCRYPT_ROUNDS=12

# Rate Limiting
GLOBAL_RATE_LIMIT=1000
AUTH_RATE_LIMIT=5
RATE_LIMIT_WINDOW=900000

# Logging
LOG_LEVEL=info
LOG_FILE=application.log

# Email Configuration (for future email verification)
# SMTP_HOST=smtp.example.com
# SMTP_PORT=587
# SMTP_USER=your-email@example.com
# SMTP_PASS=your-email-password
# FROM_EMAIL=noreply@yourtracker.com

# Redis Configuration (for production token blacklist and rate limiting)
# REDIS_URL=redis://localhost:6379
# REDIS_PASSWORD=your-redis-password

# Monitoring
# SENTRY_DSN=your-sentry-dsn-for-error-tracking

# File Upload (if implemented)
# MAX_FILE_SIZE=100mb
# UPLOAD_PATH=./uploads

# Security Headers
CSP_REPORT_URI=/api/security/csp-report
HSTS_MAX_AGE=31536000